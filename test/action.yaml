name: Test aqua registry
description: Test aqua registry
inputs:
  goos:
    required: true
  goarch:
    required: true
  go_version:
    required: false
    default: "1.23.3"
runs:
  using: composite
  steps:
    - name: Remove aqua.yaml to avoid unneeded installation
      shell: bash
      run: "rm aqua.yaml || :"

    - name: Run ci-info and update environment variables
      shell: bash
      # TODO Run the command without `aqua exec`.
      # We don't know the cause, but `ci-info run | sed -E "s/^export //" >> "$GITHUB_ENV"` doesn't work on Windows.
      # So we run ci-info via `aqua exec`.
      run: aqua exec -- ci-info run | sed -E "s/^export //" >> "$GITHUB_ENV"
      env:
        AQUA_CONFIG: aqua/ci-info.yaml

    - name: Update aqua/test.yaml
      shell: bash
      run: |
        set -euo pipefail
        pkgs=$(bash "$GITHUB_ACTION_PATH"/list_pkgs.sh "$CI_INFO_TEMP_DIR/pr_files.txt" "$CI_INFO_TEMP_DIR/labels.txt")
        if [ -n "$pkgs" ]; then
          bash "$GITHUB_ACTION_PATH/output_summary.sh" "$pkgs" >> "$GITHUB_STEP_SUMMARY"
        fi
        pkgs2=$(echo "$pkgs" | grep -v -E "^pkgs/crates\.io/") || :
        if [ -n "$pkgs2" ]; then
          echo "$pkgs2" | sed -E "s|\(.*\)|- import: ../pkgs/\1/pkg.yaml|" >> aqua/test.yaml
        fi
        echo "[INFO] aqua/test.yaml" >&2
        cat aqua/test.yaml >&2

    - name: Check if go is required
      shell: bash
      id: go_required
      run: |
        if grep '\- import:' aqua/test.yaml | sed 's|  - import: ../\(.*\)/pkg.yaml|\1/registry.yaml|' | xargs cat | grep "type: go" > /dev/null 2>&1; then
          echo "value=true" >> "$GITHUB_OUTPUT"
        else
          echo "value=false" >> "$GITHUB_OUTPUT"
        fi

    - name: Install Go
      if: steps.go_required.outputs.value == 'true'
      uses: actions/setup-go@41dfa10bad2bb2ae585af6ee5bb4d7d973ad74ed # v5.1.0
      with:
        go-version: ${{ inputs.go_version }}

    - name: Install packages for testing
      shell: bash
      run: aqua i
      env:
        AQUA_GOOS: ${{ inputs.goos }}
        AQUA_GOARCH: ${{ inputs.goarch }}
        AQUA_CONFIG: aqua/test.yaml
